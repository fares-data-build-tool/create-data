version: 2.1
orbs:
    aws-cli: circleci/aws-cli@0.1.20
    aws-ecr: circleci/aws-ecr@6.7.1

jobs:
    checkout-repo:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        steps:
            - checkout
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - '*'

    build-site:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        steps:
            - attach_workspace:
                  at: ~/project
            - run:
                  command: |
                      echo "Starting build"
                      npm install
                      npm run build
            - persist_to_workspace:
                  root: ~/project
                  paths:
                      - 'node_modules'

    audit-site:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        steps:
            - attach_workspace:
                  at: ~/project
            - run:
                  command: |
                      npx audit-ci --moderate

    test-site:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        steps:
            - attach_workspace:
                  at: ~/project
            - run:
                  command: |
                      echo "Running tests"
                      npm run test:ci

    lint-site:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        steps:
            - attach_workspace:
                  at: ~/project
            - run:
                  command: |
                      echo "Linting site"
                      npm run lint

    build-and-deploy-site-to-test:
        docker:
            - image: circleci/node:12
        working_directory: ~/project
        executor: aws-cli/default
        steps:
            - attach_workspace:
                  at: ~/project
            - aws-cli/setup:
                  profile-name: default
            - run:
                  command: |
                      echo "Deploying..."
                      sudo npm i -g serverless
                      cd deploy/test
                      echo "Downloading state"
                      aws s3 sync --delete s3://fdbt-serverless-component-state-test .serverless/
                      export NODE_ENV='production' && export STAGE='test' && serverless
                      echo "Uploading new state"
                      aws s3 sync --delete .serverless/ s3://fdbt-serverless-component-state-test
                      echo "Finished deploy"

    # deploy-site-to-preprod:
    #     docker:
    #         - image: circleci/node:12
    #     working_directory: ~/project
    #     executor: aws-cli/default
    #     steps:
    #         - attach_workspace:
    #               at: ~/project
    #         - aws-cli/setup:
    #               profile-name: default
    #         - run:
    #               command: |
    #                   echo "Deploying..."
    #                   sudo npm i -g serverless
    #                   cd deploy/preprod
    #                   echo "Downloading state"
    #                   aws s3 sync --delete s3://fdbt-serverless-component-state-preprod .serverless/
    #                   export NODE_ENV='production' && export STAGE='preprod' && serverless
    #                   echo "Uploading new state"
    #                   aws s3 sync --delete .serverless/ s3://fdbt-serverless-component-state-preprod
    #                   echo "Finished deploy"

workflows:
    version: 2
    build-test-and-deploy-site:
        jobs:
            - checkout-repo:
                  filters:
                      branches:
                          only:
                              - feature/TFN-312_dockerise_site

            - build-site:
                  requires:
                      - checkout-repo
                  filters:
                      branches:
                          only:
                              - feature/TFN-312_dockerise_site

            - audit-site:
                  requires:
                      - build-site
                  filters:
                      branches:
                          only:
                              - feature/TFN-312_dockerise_site

            - test-site:
                  requires:
                      - audit-site
                  filters:
                      branches:
                          only:
                              - feature/TFN-312_dockerise_site

            - lint-site:
                  requires:
                      - audit-site
                  filters:
                      branches:
                          only:
                              - feature/TFN-312_dockerise_site

            - aws-ecr/build-and-push-image:
                  requires:
                      - test-site
                      - lint-site
                  repo: '${AWS_RESOURCE_NAME_PREFIX}'
                  tag: '${CIRCLE_SHA1}'
                  context: tfn-fdbt-core
                  filters:
                      branches:
                          only: feature/TFN-312_dockerise_site
            # - deploy-site-to-test:
            #       requires:
            #           - test-site
            #           - lint-site
            #       context: 'tfn-fdbt-test'
            #       filters:
            #           branches:
            #               only: feature/TFN-312_dockerise_site
            # - hold-preprod-deployment:
            #       type: approval
            #       requires:
            #           - test-site
            #           - lint-site
            #       filters:
            #           branches:
            #               only: master
            # - deploy-site-to-preprod:
            #       requires:
            #           - hold-preprod-deployment
            #       context: 'tfn-fdbt-preprod'
            #       filters:
            #           branches:
            #               only: master
