service: reference-data-service-uploaders

provider:
    name: aws
    runtime: python3.8
    region: eu-west-2
    stage: ${opt:stage, 'test'}
    lambdaHashingVersion: 20201221
    vpc:
        securityGroupIds:
            - Fn::ImportValue: ${self:provider.stage}:ReferenceDataUploaderLambdaSG
        subnetIds:
            - Fn::ImportValue: ${self:provider.stage}:PrivateSubnetA
            - Fn::ImportValue: ${self:provider.stage}:PrivateSubnetB
    environment:
        RDS_HOST:
            Fn::ImportValue: ${self:provider.stage}:RdsClusterInternalEndpoint
    iam:
        role:
            statements:
                - Effect: 'Allow'
                  Action:
                      - 'ssm:GetParameter'
                  Resource: '*'
                - Effect: 'Allow'
                  Action:
                      - 's3:GetObject'
                      - 's3:ListBucket'
                  Resource:
                      - 'arn:aws:s3:::fdbt-csv-ref-data-${self:provider.stage}/*'
                      - 'arn:aws:s3:::fdbt-txc-ref-data-${self:provider.stage}/*'
                - Effect: 'Allow'
                  Action:
                      - 'cloudwatch:PutMetricData'
                  Resource: '*'
    s3:
        csvRefData:
            name: fdbt-csv-ref-data-${self:provider.stage}
            publicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
            bucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256

        txcRefData:
            name: fdbt-txc-ref-data-${self:provider.stage}
            publicAccessBlockConfiguration:
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
            bucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256
            lifecycleConfiguration:
                Rules:
                    - Id: ExpiryRule
                      Status: Enabled
                      ExpirationInDays: '5'

plugins:
    - serverless-python-requirements
    - serverless-plugin-aws-alerts

custom:
    pythonRequirements:
        dockerizePip: false
    alerts:
        dashboards: false
        topics:
            ok:
                topic: reference-data-service-uploaders-ok-topic
                notifications:
                    - protocol: lambda
                      endpoint:
                          Fn::ImportValue: ${self:provider.stage}:SlackAlertsFunctionArn
            alarm:
                topic: reference-data-service-uploaders-alarm-topic
                notifications:
                    - protocol: lambda
                      endpoint:
                          Fn::ImportValue: ${self:provider.stage}:SlackAlertsFunctionArn
        alarms:
            - functionThrottles
            - functionErrors
            - functionInvocations
            - functionDuration

functions:
    CsvUploader:
        handler: csv_uploader/main.lambda_handler
        module: csv_uploader
        timeout: 60
        memorySize: 256
        events:
            - s3: csvRefData
              event: s3:ObjectCreated:*
        alarms:
            - name: functionDuration
              threshold: 50000
              treatMissingData: notBreaching
            - name: functionThrottles
              treatMissingData: notBreaching
            - name: functionErrors
              treatMissingData: notBreaching
            - name: functionInvocations
              treatMissingData: notBreaching

    TxcUploader:
        handler: txc_uploader/main.lambda_handler
        module: txc_uploader
        timeout: 60
        memorySize: 1024
        maximumRetryAttempts: 0
        events:
            - s3:
                  bucket: txcRefData
                  event: s3:ObjectCreated:*
                  rules:
                      - prefix: tnds/
                      - suffix: .xml
            - s3:
                  bucket: txcRefData
                  event: s3:ObjectCreated:*
                  rules:
                      - prefix: bods/
                      - suffix: .xml
        reservedConcurrency: 20
        alarms:
            - name: functionDuration
              threshold: 50000
              treatMissingData: notBreaching
            - name: functionThrottles
              threshold: 1000
              treatMissingData: notBreaching
            - name: functionErrors
              treatMissingData: notBreaching
            - name: functionInvocations
              threshold: 5000
              treatMissingData: notBreaching

package:
    include:
        - ./csv_uploader/*
        - ./txc_uploader/*
    exclude:
        - ./node_modules/**
