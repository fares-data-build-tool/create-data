version: 2.1

jobs:
  checkout-repo:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/project
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*"

  audit-reference-data-uploaders:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            cd src/uploaders
            npx audit-ci --moderate

  deploy-reference-data-uploaders-to-test:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying..."
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm i -g serverless
            cd src/uploaders
            npm install
            export SLS_DEBUG="*" && sls deploy --stage=test
            echo "Finished deploy"

  deploy-reference-data-uploaders-to-preprod:
    docker:
      - image: circleci/node:python:3.8
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying..."
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm i -g serverless
            cd src/uploaders
            npm install
            export SLS_DEBUG="*" && sls deploy --stage=preprod
            echo "Finished deploy"

  deploy-reference-data-retrievers-to-test:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying..."
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm i -g serverless
            cd src/retrievers
            npm install
            export SLS_DEBUG="*" && sls deploy --stage=test
            echo "Finished deploy"

  deploy-reference-data-retrievers-to-preprod:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Deploying..."
            curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
            sudo apt-get install -y nodejs
            sudo npm i -g serverless
            cd src/retrievers
            npm install
            export SLS_DEBUG="*" && sls deploy --stage=preprod
            echo "Finished deploy"

workflows:
  version: 2
  audit-and-deploy-reference-data-lambdas:
    jobs:
      - checkout-repo

      - deploy-reference-data-retrievers-to-test:
          requires:
            - checkout-repo
          context: tfn-fdbt-test
          filters:
            branches:
              only: develop

      - hold-reference-data-retrievers-preprod-deployment:
          type: approval
          requires:
            - checkout-repo
          filters:
            branches:
              only: master

      - deploy-reference-data-retrievers-to-preprod:
          requires:
            - hold-reference-data-retrievers-preprod-deployment
          context: tfn-fdbt-preprod
          filters:
            branches:
              only: master

      - audit-reference-data-uploaders:
          requires:
            - checkout-repo

      - deploy-reference-data-uploaders-to-test:
          requires:
            - audit-reference-data-uploaders
          context: tfn-fdbt-test
          filters:
            branches:
              only: develop

      - hold-reference-data-uploaders-preprod-deployment:
          type: approval
          requires:
            - audit-reference-data-uploaders
          filters:
            branches:
              only: master

      - deploy-reference-data-uploaders-to-preprod:
          requires:
            - hold-reference-data-uploaders-preprod-deployment
          context: tfn-fdbt-preprod
          filters:
            branches:
              only: master
