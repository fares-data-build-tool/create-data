AWSTemplateFormatVersion: "2010-09-09"

Description: "CloudFormation template for S3 resources"

Parameters:
  TestAccountId:
    Type: String
  PreProdAccountId:
    Type: String
  ProdAccountId:
    Type: String

Resources:
  SharedContentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cfd-shared-content
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: false

  SharedContentBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SharedContentBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub arn:aws:s3:::${SharedContentBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${TestAccountId}:root
                - !Sub arn:aws:iam::${PreProdAccountId}:root
                - !Sub arn:aws:iam::${ProdAccountId}:root

  SlackAlertsCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cfd-slack-alerts-code
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: false

  SlackAlertsCodeBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SlackAlertsCodeBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub arn:aws:s3:::${SlackAlertsCodeBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${TestAccountId}:root
                - !Sub arn:aws:iam::${PreProdAccountId}:root
                - !Sub arn:aws:iam::${ProdAccountId}:root

  CognitoCustomTriggersBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cfd-cognito-custom-triggers
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: false

  CognitoCustomTriggersBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CognitoCustomTriggersBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource: !Sub arn:aws:s3:::${CognitoCustomTriggersBucket}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${TestAccountId}:root
                - !Sub arn:aws:iam::${PreProdAccountId}:root
                - !Sub arn:aws:iam::${ProdAccountId}:root

  AuditTrailsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: cfd-audit-trails
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 90
            Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  AuditTrailsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AuditTrailsBucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:PutObject"
            Effect: "Allow"
            Resource:
              - !Sub "arn:aws:s3:::cfd-audit-trails/AWSLogs/${TestAccountId}/*"
              - !Sub "arn:aws:s3:::cfd-audit-trails/AWSLogs/${PreProdAccountId}/*"
              - !Sub "arn:aws:s3:::cfd-audit-trails/AWSLogs/${ProdAccountId}/*"
              - !Sub "arn:aws:s3:::cfd-audit-trails/AWSLogs/${AWS::AccountId}/*"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Condition:
              StringEquals: { "s3:x-amz-acl": "bucket-owner-full-control" }
          - Action:
              - "s3:GetBucketAcl"
            Resource: "arn:aws:s3:::cfd-audit-trails"
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"

  AthenaQueryResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cfd-athena-query-results
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
