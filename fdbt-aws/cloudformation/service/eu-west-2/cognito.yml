AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for Cognito resources

Parameters:
  Stage:
    Type: String
    AllowedValues:
      - test
      - preprod
      - prod
  RegistrationLink:
    Type: String
  SESSourceArn:
    Type: String
  ForgottenPasswordLink:
    Type: String

Conditions:
  IsProd: !Equals [!Ref Stage, "prod"]

Resources:
  CognitoEmailTriggerLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: tfn-cognito-custom-triggers
        S3Key: email-trigger/v4/customEmailTrigger.zip
      Description: Lambda to send custom emails on user creation and forgotten password
      Environment:
        Variables:
          REGISTRATION_LINK: !Ref RegistrationLink
          FORGOTTEN_PASSWORD_LINK: !Ref ForgottenPasswordLink
      FunctionName: !Sub cognito-email-trigger-${Stage}
      Handler: custom_email_trigger.handler
      Role:
        Fn::ImportValue: !Sub ${Stage}:CognitoCustomTriggersLambdaRoleArn
      Runtime: python3.8

  CognitoTriggerLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt CognitoEmailTriggerLambda.Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn: !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub fdbt-user-pool-${Stage}
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
        - Name: noc
          AttributeDataType: String
          StringAttributeConstraints:
            MaxLength: "256"
            MinLength: "1"
          Mutable: true
        - Name: contactable
          AttributeDataType: String
          StringAttributeConstraints:
            MaxLength: "3"
            MinLength: "2"
          Mutable: true
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          TemporaryPasswordValidityDays: 3
      EmailConfiguration:
        SourceArn: !Ref SESSourceArn
        EmailSendingAccount: !If [IsProd, "DEVELOPER", "COGNITO_DEFAULT"]
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      LambdaConfig:
        CustomMessage: !GetAtt CognitoEmailTriggerLambda.Arn
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub fdbt-site-client-${Stage}
      UserPoolId: !Ref UserPool
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      ReadAttributes:
        - email
        - email_verified
        - custom:noc
      WriteAttributes:
        - email
        - custom:noc
        - custom:contactable
      PreventUserExistenceErrors: ENABLED

Outputs:
  UserPoolClientID:
    Value: !Ref UserPoolClient
    Export:
      Name: !Sub ${Stage}:UserPoolClientID
  UserPoolID:
    Value: !Ref UserPool
    Export:
      Name: !Sub ${Stage}:UserPoolID
