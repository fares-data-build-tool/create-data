AWSTemplateFormatVersion: "2010-09-09"

Description: "CloudFormation template for IAM resources"

Parameters:
  Stage:
    Type: String
    AllowedValues:
      - test
      - preprod
      - prod

Resources:
  AdminRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - 827855331226
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-admin-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  ReadOnlyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - 827855331226
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-readonly-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  BillingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - 827855331226
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-billing-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/Billing

  Policy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Policy for cicd accounts"
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:*"
              - "logs:*"
              - "cloudformation:*"
              - "iam:*"
              - "cloudfront:*"
              - "cloudwatch:*"
              - "waf:*"
              - "route53:*"
              - "lambda:*"
              - "waf-regional:*"
              - "acm:DescribeCertificate"
              - "acm:GetCertificate"
              - "acm:ListTagsForCertificate"
              - "acm:ListCertificates"
              - "apigateway:*"
              - "dynamodb:*"
              - "events:*"
            Resource: "*"

  NextJsLambdaPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Policy for lambda@edge execution role"
      Path: /
      ManagedPolicyName: fdbt-nextjs-lambda-policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: "*"
          - Effect: Allow
            Action:
              - "dynamodb:GetItem"
              - "dynamodb:BatchGetItem"
              - "dynamodb:PutItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
              - "s3:PutObject"
              - "s3:GetObject"
            Resource: "*"

  Group:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: "fdbt-cicd-group"
      ManagedPolicyArns:
        - !Ref Policy

  User:
    Type: "AWS::IAM::User"
    Properties:
      UserName: "fdbt-circleci-user"
      Groups:
        - !Ref Group
