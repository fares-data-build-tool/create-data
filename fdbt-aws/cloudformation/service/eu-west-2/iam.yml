AWSTemplateFormatVersion: "2010-09-09"

Description: "CloudFormation template for IAM resources"

Parameters:
  Stage:
    Type: String
    AllowedValues:
      - test
      - preprod
      - prod
  CoreAccountId:
    Type: String

Conditions:
  IsTest: !Equals [!Ref Stage, "test"]

Resources:
  AdminRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref CoreAccountId
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-admin-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref CoreAccountId
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-readonly-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess

  BillingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref CoreAccountId
            Action:
              - "sts:AssumeRole"
            Condition:
              Bool:
                aws:MultiFactorAuthPresent: true
      RoleName: !Sub tfn-billing-${Stage}-${AWS::Region}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/Billing

  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource:
                  - !Sub arn:aws:s3:::fdbt-user-data-${Stage}/*
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                Resource:
                  - !Sub arn:aws:s3:::fdbt-raw-user-data-${Stage}/*
                  - !Sub arn:aws:s3:::fdbt-matching-data-${Stage}/*
              - Effect: Allow
                Action:
                  - "ssm:GetParameter"
                Resource: "*"
          PolicyName: ecs-site-task-permissions

  EcsTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ecs-tasks.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  RdsEnhancedMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [monitoring.rds.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole

  RdsAuroraS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [rds.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                Resource:
                  - !Sub arn:aws:s3:::fdbt-csv-reference-data-${Stage}/*
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                Resource:
                  - !Sub arn:aws:s3:::fdbt-csv-reference-data-${Stage}
          PolicyName: allow-aurora-s3-access

  SlackLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                Resource:
                  - arn:aws:s3:::tfn-slack-alerts-code/*
          PolicyName: allow-slack-alerts-code-access
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  BastionSsmRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for cicd accounts
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:*"
              - "logs:*"
              - "cloudformation:*"
              - "iam:*"
              - "cloudwatch:*"
              - "lambda:*"
              - "acm:DescribeCertificate"
              - "acm:GetCertificate"
              - "acm:ListTagsForCertificate"
              - "acm:ListCertificates"
              - "events:*"
              - "ecs:*"
              - "ec2:*"
              - "sns:*"
            Resource: "*"

  Group:
    Type: AWS::IAM::Group
    Properties:
      GroupName: fdbt-cicd-group
      ManagedPolicyArns:
        - !Ref Policy

  User:
    Type: AWS::IAM::User
    Properties:
      UserName: fdbt-circleci-user
      Groups:
        - !Ref Group

  UiTestsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsTest
    Properties:
      Description: Policy for ui tests user
      Path: /
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "wafv2:UpdateIPSet"
              - "wafv2:GetIPSet"
            Resource: "*"

  UiTestsUser:
    Type: AWS::IAM::User
    Condition: IsTest
    Properties:
      ManagedPolicyArns:
        - !Ref UiTestsPolicy
      UserName: fdbt-ui-tests-user

Outputs:
  EcsTaskRoleArn:
    Value: !GetAtt EcsTaskRole.Arn
    Export:
      Name: !Sub ${Stage}:EcsTaskRoleArn
  EcsTaskExecutionRoleArn:
    Value: !GetAtt EcsTaskExecutionRole.Arn
    Export:
      Name: !Sub ${Stage}:EcsTaskExecutionRoleArn
  RdsEnhancedMonitoringRoleArn:
    Value: !GetAtt RdsEnhancedMonitoringRole.Arn
    Export:
      Name: !Sub ${Stage}:RdsEnhancedMonitoringRoleArn
  SlackLambdaRoleArn:
    Value: !GetAtt SlackLambdaRole.Arn
    Export:
      Name: !Sub ${Stage}:SlackLambdaRoleArn
  RdsAuroraS3RoleArn:
    Value: !GetAtt RdsAuroraS3Role.Arn
    Export:
      Name: !Sub ${Stage}:RdsAuroraS3RoleArn
  BastionSsmRoleName:
    Value: !Ref BastionSsmRole
    Export:
      Name: !Sub ${Stage}:BastionSsmRoleName
