on:
  push:
    branches:
    - 'develop'
    paths:
    - repos/fdbt-reference-data-service/*
  workflow_dispatch:

name: 'fdbt-reference-data-service_to_test'

defaults:
  run:
    working-directory: ./repos/fdbt-reference-data-service

jobs:

  fdbt-reference-data-service_deploy_to_test:
    name: 'fdbt-reference-data-service_to_test'
    runs-on: ubuntu-latest
    env:
      WORKSPACE: test
    environment:
      name: test
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: audit-reference-data-retrievers
      run: |
        pip install safety
        cd src/retrievers
        safety check -r requirements.txt

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: 12.x

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: deploy-reference-data-retrievers
      run: |
        echo "Deploying..."
        curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-get install -y nodejs
        cd src/retrievers
        npm ci
        npm run deploy:${{ env.WORKSPACE }}
        echo "Finished deploy"

    - name: audit-reference-data-uploaders
      run: |
        pip install safety
        cd src/uploaders
        safety check -r requirements.txt
        safety check -r requirements.test.txt
    
    - name: test-reference-data-uploaders
      run: |
        cd src/uploaders
        pip install -r requirements.test.txt
        echo "Running tests..."
        python3 -m pytest tests/

    - name: deploy-reference-data-uploaders-to
      run: |
        echo "Deploying..."
        curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-get install -y nodejs
        cd src/uploaders
        npm ci
        npm run deploy:${{ env.WORKSPACE }}
        echo "Finished deploy"

    


    
    
