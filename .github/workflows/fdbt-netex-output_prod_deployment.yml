on:
  push:
    tags:
    - 'v*'
    paths:
    - repos/fdbt-netex-output/**
  workflow_dispatch:

name: 'fdbt-netex-output_prod'

defaults:
  run:
    working-directory: ./repos/fdbt-netex-output

jobs:

  fdbt-netex-output_deploy_to_prod:
    name: 'fdbt-netex-output_prod'
    runs-on: ubuntu-latest
    env:
      WORKSPACE: prod
    environment:
      name: prod
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
      
    - name: audit-netex-validator
      run: |
        pip install safety
        cd src/netex-validator
        safety check -r requirements.txt

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
        
    - name: Zipping code for netex validator
      run: |
        echo "Zipping..."
        cd src/netex-validator
        pip install --target=/home/runner/work/create-data/create-data/repos/fdbt-netex-output/src/netex-validator -r requirements.txt
        pwd
        ls        
        zip -r netex-validator.zip . -x /cloudformation-template-create-stack.json -x /serverless.yml   
        zip -sf netex-validator.zip

    - name: update-netex-validator 
      run: |
        echo "Updating..."
        cd src/netex-validator        
        aws lambda update-function-code --function-name netex-validator-prod-NetexValidator --zip-file fileb://netex-validator.zip

    - name: Use Node.js 
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    
    - name: build
      run: |
        echo "Starting build"
        npm ci
        echo " ci finished"
        npm run build
        
    - name: lint
      run: |
        echo "Linting"
        npm run lint

    - name: remove dev deps
      run: |
        npm prune --omit=dev

    - name: Zipping code for netex emailer
      run: |
        echo "Zipping..."
        mkdir .emailer-build
        cp -R package.json node_modules .emailer-build/
        mkdir .emailer-build/src
        cp -R .build/src/netex-emailer .build/src/data .emailer-build/src
        cd .emailer-build/
        npm pkg delete scripts.prepare
        zip -r netex-emailer.zip .

    - name: update-netex-emailer 
      run: |
        echo "Updating....."
        cd .emailer-build/
        aws lambda update-function-code --function-name netex-output-service-prod-NetexEmailer --zip-file fileb://netex-emailer.zip

    - name: Zipping code for netex convertor
      run: |
        echo "Zipping..."
        mkdir .convertor-build
        cp -R package.json node_modules .convertor-build/
        mkdir .convertor-build/src
        cp -R .build/src/netex-convertor .build/src/data .build/src/types .convertor-build/src
        cp src/netex-convertor/period-tickets/periodTicketNetexTemplate.xml .convertor-build/src/netex-convertor/period-tickets
        cp src/netex-convertor/point-to-point-tickets/pointToPointTicketNetexTemplate.xml .convertor-build/src/netex-convertor/point-to-point-tickets
        cd .convertor-build/
        npm pkg delete scripts.prepare
        zip -r netex-convertor.zip .

    - name: update-netex-convertor 
      run: |
        echo "Updating....."
        cd .convertor-build/
        aws lambda update-function-code --function-name netex-output-service-prod-NetexConvertor --zip-file fileb://netex-convertor.zip

    


    
    
