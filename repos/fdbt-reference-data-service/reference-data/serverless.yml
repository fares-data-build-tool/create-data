service: reference-data-service

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage, 'test'}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
        - 's3:ListBucket'
      Resource: 'arn:aws:s3:::fdbt-test-tnds-data'
    - Effect: 'Allow'
      Action:
        - 'dynamodb:BatchWriteItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:UpdateItem'
      Resource:
        Fn::GetAtt:
        - tndsTable
        - Arn
      


plugins:
  - serverless-plugin-typescript
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline


functions:
  naptanUploader:
    handler: naptan-uploader/handler.s3hook
    events: 
      - s3: fdbt-test-naptan-data
        event: s3:ObjectCreated:*

  nocUploader:
    handler: noc-uploader/handler.s3hook
    events: 
      - s3: fdbt-test-noc-data
        event: s3:ObjectCreated:*

  nptgUploader:
    handler: nptg-uploader/handler.s3hook
    events: 
      - s3: fdbt-test-ntpg-data
        event: s3:ObjectCreated:*

  tndsUploader:
    handler: tnds-uploader/handler.s3hook
    events: 
      - s3: fdbt-test-tnds-data
        event: s3:ObjectCreated:*


package:
  exclude:
    - node_modules/**/*
  include:
    - naptan-uploader/handler.ts
    - noc-uploader/handler.ts
    - nptg-uploader/handler.ts
    - tnds-uploader/handler.ts

resources: 
  Resources:
    naptanTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Stops
        AttributeDefinitions:
          - AttributeName: "ATCOCode"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "ATCOCode"
            KeyType: "HASH"
         ## Need to look at on demand for this
         ## BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    
    nocTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Operators
        AttributeDefinitions:
          - AttributeName: "NOCCode"
            AttributeType: "S"
          - AttributeName: "PubNmId"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "NOCCode"
            KeyType: "HASH"
        GlobalSecondaryIndexes:
          - IndexName: "PubNmId"
            KeySchema: 
              - AttributeName: "PubNmId"
                KeyType: "HASH"
            Projection:
              ProjectionType: "KEYS_ONLY"
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    
    servicesTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Services
        AttributeDefinitions:
          - AttributeName: "NationalOperatorCode"
            AttributeType: "S"
          - AttributeName: "LineName"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "NationalOperatorCode"
            KeyType: "HASH"
          - AttributeName: "LineName"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    tndsTable: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: TNDS
        AttributeDefinitions:
          - AttributeName: "FileName"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "FileName"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


# The below custom section is for local testing of dynamodb using serverless-dynamodb-local.
custom:
  dynamodb:
    stages:
      - test
    start:
      port: 9100
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
    
    seed:
      domain:
        sources:
          - table: Stops
            sources: [./.dynamodb/dummy_naptan_data.json]
          - table: Operators
            sources: [./.dynamodb/dummy_noc_data.json]
          - table: Services
            sources: [./.dynamodb/seededTestData/dummy_services_data.json]
          - table: TNDS
            sources: [./.dynamodb/seededTestData/dummy_tnds_data.json]

      convertEmptyValues: true