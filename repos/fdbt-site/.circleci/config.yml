version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.0
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-ecs: circleci/aws-ecs@2.1.0

jobs:
  checkout-repo:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*"

  run-ui-tests:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          profile-name: default
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            ~/project/run_tests_in_browserstack.sh
          no_output_timeout: 40m
  
  build-site:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Starting build"
            npm install
            npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - "node_modules"

  audit-site:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            npx audit-ci --moderate

  test-site:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Running tests"
            npm run test:ci

  lint-site:
    docker:
      - image: circleci/node:12
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          command: |
            echo "Linting site"
            npm run lint

workflows:
  version: 2
  build-test-and-deploy-site:
    jobs:
      - checkout-repo:
          filters:
            tags:
              only: /^v.*/

      - audit-site:
          requires:
            - checkout-repo
          filters:
            tags:
              only: /^v.*/

      - build-site:
          requires:
            - audit-site
          filters:
            tags:
              only: /^v.*/

      - test-site:
          requires:
            - build-site
          filters:
            tags:
              only: /^v.*/

      - lint-site:
          requires:
            - build-site
          filters:
            tags:
              only: /^v.*/

      - aws-ecr/build-and-push-image:
          requires:
            - test-site
            - lint-site
          repo: "${SITE_ECR_REPO}"
          tag: "${CIRCLE_SHA1},latest"
          context: tfn-fdbt-core
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - develop
                - master

      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          name: deploy-site-to-test
          family: "${SITE_ECS_FAMILY}"
          cluster-name: "${SITE_ECS_CLUSTER}"
          container-image-name-updates: "container=${SITE_ECS_FAMILY},tag=${CIRCLE_SHA1}"
          context: tfn-fdbt-test
          verify-revision-is-deployed: true
          filters:
            branches:
              only: develop

      - run-ui-tests:
          requires:
            - deploy-site-to-test
          context: tfn-fdbt-automation-test
          filters:
            branches:
              only: develop

      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: "${SITE_ECS_FAMILY}"
          name: deploy-site-to-preprod
          cluster-name: "${SITE_ECS_CLUSTER}"
          container-image-name-updates: "container=${SITE_ECS_FAMILY},tag=${CIRCLE_SHA1}"
          context: tfn-fdbt-preprod
          verify-revision-is-deployed: true
          filters:
            branches:
              only: master

      - hold-prod-deployment:
          type: approval
          requires:
            - aws-ecr/build-and-push-image
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - aws-ecs/deploy-service-update:
          requires:
            - hold-prod-deployment
          family: "${SITE_ECS_FAMILY}"
          name: deploy-site-to-prod
          cluster-name: "${SITE_ECS_CLUSTER}"
          container-image-name-updates: "container=${SITE_ECS_FAMILY},tag=${CIRCLE_SHA1}"
          context: tfn-fdbt-prod
          verify-revision-is-deployed: true
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
